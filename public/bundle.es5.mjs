const e="contentstorage-handshake-initiate",t="parent-handshake-acknowledge",o="contentstorage-set-config",n=()=>{const e=document.querySelectorAll("[data-contentstorage-id]");console.log("ELEMENTS",e),e.forEach((e=>{const t=e.dataset.contentstorageId;if(t){e.style.outline="1px solid #1791FF",e.style.position="relative",e.style.borderRadius=e.style.borderRadius?e.style.borderRadius:"4px";const o=document.createElement("div");o.setAttribute("id","contentstorage-element-label"),o.textContent=t,o.style.position="absolute",o.style.top="-17px",o.style.left="0px",o.style.color="#1791FF",o.style.padding="2px 4px",o.style.fontSize="10px",o.style.zIndex="9999",o.style.pointerEvents="none",e.appendChild(o)}}))};let a={highlightEditableContent:!1};const r=e=>{a={...e}},i=(e,t)=>{let o=!1;const r=document.body,i=["contentstorage-element-label"],c=["style","class"];for(const t of e){if("attributes"===t.type&&t.attributeName&&c.includes(t.attributeName)){if(!t.target.hasAttribute("data-contentstorage-id"))continue}let e=null;if("childList"!==t.type&&"attributes"!==t.type&&"characterData"!==t.type||(e=t.target),e){let t=!1,o=e.nodeType===Node.ELEMENT_NODE?e:e.parentElement;for(;o;){if(o.id&&i.includes(o.id)){t=!0;break}o=o.parentElement}if(t)continue}o=!0;break}if(o){t.disconnect();try{a.highlightEditableContent&&n()}catch(e){console.error("Error during applyConfig:",e)}finally{Promise.resolve().then((()=>{t.observe(r,s)})).catch((e=>{console.error("Error re-observing after applyConfig:",e)}))}}},s={childList:!0,subtree:!0,attributes:!0,attributeFilter:["data-contentstorage-id"]};!function(){const a=document.currentScript;if(!a)return void console.error("CDN Script: Could not determine the current script element. This is necessary to read URL parameters from the script's own URL. Ensure the script is loaded via a standard <script> tag.");const c=a.src;console.log(`CDN Script: Loaded from ${c}`);let l=null;try{l=new URL(c).searchParams.get("contentstorage-live-editor")}catch(e){return void console.error("CDN Script: Could not parse script URL. Ensure it's a valid URL.",e)}if(l)if(window.parent&&window.parent!==window){console.log("CDN Script: Running inside an iframe. Setting up communication with parent and initiating handshake.");const a=new MutationObserver(i);let c,d=!1;const p=e=>{var i;e.source===window.parent&&e.data&&(e.data.type===t?d||(d=!0,console.log("CDN Script: Received handshake acknowledgment from parent:",e.data.payload),i=e.data.payload.data.config,r(i),console.log("INITIAL CONFIG",i),i.highlightEditableContent&&n(),console.log("Applied config:",e.data.payload),console.log("Started observing DOM for mutations"),a.observe(document.body,s),console.log("CDN Script: Received handshake acknowledgment from parent:",e.data.payload),g(),console.log("CDN Script: Parent communication handshake successful. Ready for further messages.")):d?(console.log("CDN Script: Received further message from parent:",e.data),e.data.type===o&&r(e.data.payload)):console.warn("CDN Script: Received message from parent before handshake was complete. Ignoring:",e.data))},g=()=>{c&&(clearTimeout(c),c=void 0)};window.addEventListener("message",p);const u={type:e,payload:`Hello from iframe script (editor param: ${l}). Initiating handshake.`};console.log("CDN Script: Sending handshake message to parent:",u),window.parent.postMessage(u,"*"),c=window.setTimeout((()=>{d||(console.warn("CDN Script: Parent communication handshake timed out. Parent did not respond or acknowledge correctly."),g())}),5e3)}else console.log("CDN Script: Not running inside an iframe, or parent is not accessible. Skipping parent communication setup.");else console.warn("CDN Script: The 'contentstorage-live-editor' URL parameter is MISSING in the script's src. This is a prerequisite. Halting further iframe-specific operations.")}();
