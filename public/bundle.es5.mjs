const e="contentstorage-handshake-initiate",t="parent-handshake-acknowledge",n="contentstorage-set-config",o=e=>{console.log("INITIAL CONFIG",e),e.highlightEditableContent&&(()=>{const e=document.querySelectorAll("[data-contentstorage-id]");console.log("ELEMENTS",e),e.forEach((e=>{const t=e.dataset.contentstorageId;if(t){e.style.outline="1px solid #1791FF",e.style.position="relative";const n=document.createElement("div");n.setAttribute("id","contentstorage-element-label"),n.textContent=t,n.style.position="absolute",n.style.top="0",n.style.left="0",n.style.color="white",n.style.padding="2px 4px",n.style.fontSize="10px",n.style.zIndex="9999",n.style.pointerEvents="none",e.appendChild(n)}}))})()},a=(e,t)=>{let n=!1;const o=["contentstorage-element-label"],a=["style","class"];for(const t of e){if("attributes"===t.type&&t.attributeName&&a.includes(t.attributeName)){if(!t.target.hasAttribute("data-contentstorage-id"))continue}let e=null;if(e=("childList"===t.type||t.type,t.target),e){let t=!1,n=e.nodeType===Node.ELEMENT_NODE?e:e.parentElement;for(;n;){if(n.id&&o.includes(n.id)){t=!0;break}n=n.parentElement}if(t)continue}n=!0;break}n&&console.log("DOM mutated, re-highlighting...")},i={childList:!0,subtree:!0,attributes:!0,attributeFilter:["data-contentstorage-id"]};!function(){const r=document.currentScript;if(!r)return void console.error("CDN Script: Could not determine the current script element. This is necessary to read URL parameters from the script's own URL. Ensure the script is loaded via a standard <script> tag.");const s=r.src;console.log(`CDN Script: Loaded from ${s}`);let c=null;try{c=new URL(s).searchParams.get("contentstorage-live-editor")}catch(e){return void console.error("CDN Script: Could not parse script URL. Ensure it's a valid URL.",e)}if(c)if(window.parent&&window.parent!==window){console.log("CDN Script: Running inside an iframe. Setting up communication with parent and initiating handshake.");const r=new MutationObserver(a);let s,l=!1;const d=e=>{e.source===window.parent&&e.data&&(e.data.type===t?l||(l=!0,console.log("CDN Script: Received handshake acknowledgment from parent:",e.data.payload),o(e.data.payload.data.config),console.log("Applied config:",e.data.payload),console.log("Started observing DOM for mutations"),r.observe(document.body,i),console.log("CDN Script: Received handshake acknowledgment from parent:",e.data.payload),p(),console.log("CDN Script: Parent communication handshake successful. Ready for further messages.")):l?(console.log("CDN Script: Received further message from parent:",e.data),e.data.type===n&&e.data.payload):console.warn("CDN Script: Received message from parent before handshake was complete. Ignoring:",e.data))},p=()=>{s&&(clearTimeout(s),s=void 0)};window.addEventListener("message",d);const g={type:e,payload:`Hello from iframe script (editor param: ${c}). Initiating handshake.`};console.log("CDN Script: Sending handshake message to parent:",g),window.parent.postMessage(g,"*"),s=window.setTimeout((()=>{l||(console.warn("CDN Script: Parent communication handshake timed out. Parent did not respond or acknowledge correctly."),p())}),5e3)}else console.log("CDN Script: Not running inside an iframe, or parent is not accessible. Skipping parent communication setup.");else console.warn("CDN Script: The 'contentstorage-live-editor' URL parameter is MISSING in the script's src. This is a prerequisite. Halting further iframe-specific operations.")}();
